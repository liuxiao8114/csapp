
mainx:     file format elf64-x86-64
mainx
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001120

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000002d8 memsz 0x00000000000002d8 flags r--
  INTERP off    0x0000000000000318 vaddr 0x0000000000000318 paddr 0x0000000000000318 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x00000000000009a0 memsz 0x00000000000009a0 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x00000000000003b5 memsz 0x00000000000003b5 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x0000000000000180 memsz 0x0000000000000180 flags r--
    LOAD off    0x0000000000002d78 vaddr 0x0000000000003d78 paddr 0x0000000000003d78 align 2**12
         filesz 0x00000000000002a8 memsz 0x00000000000002c0 flags rw-
 DYNAMIC off    0x0000000000002d88 vaddr 0x0000000000003d88 paddr 0x0000000000003d88 align 2**3
         filesz 0x0000000000000200 memsz 0x0000000000000200 flags rw-
    NOTE off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
    NOTE off    0x0000000000000358 vaddr 0x0000000000000358 paddr 0x0000000000000358 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
0x6474e553 off    0x0000000000000338 vaddr 0x0000000000000338 paddr 0x0000000000000338 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x0000000000002030 vaddr 0x0000000000002030 paddr 0x0000000000002030 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002d78 vaddr 0x0000000000003d78 paddr 0x0000000000003d78 align 2**0
         filesz 0x0000000000000288 memsz 0x0000000000000288 flags r--

Dynamic Section:
  NEEDED               libdl.so.2
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x00000000000013a8
  INIT_ARRAY           0x0000000000003d78
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003d80
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x00000000000003a0
  STRTAB               0x0000000000000690
  SYMTAB               0x0000000000000408
  STRSZ                0x0000000000000113
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003f88
  PLTRELSZ             0x00000000000000a8
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000008f8
  RELA                 0x0000000000000820
  RELASZ               0x00000000000000d8
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000007e0
  VERNEEDNUM           0x0000000000000002
  VERSYM               0x00000000000007a4
  RELACOUNT            0x0000000000000003

Version References:
  required from libdl.so.2:
    0x09691a75 0x00 03 GLIBC_2.2.5
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000020  0000000000000338  0000000000000338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000358  0000000000000358  00000358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000000037c  000000000000037c  0000037c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000068  00000000000003a0  00000000000003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000288  0000000000000408  0000000000000408  00000408  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       00000113  0000000000000690  0000000000000690  00000690  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000036  00000000000007a4  00000000000007a4  000007a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000040  00000000000007e0  00000000000007e0  000007e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000d8  0000000000000820  0000000000000820  00000820  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     000000a8  00000000000008f8  00000000000008f8  000008f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000080  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .plt.got      00000010  00000000000010a0  00000000000010a0  000010a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .plt.sec      00000070  00000000000010b0  00000000000010b0  000010b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text         00000285  0000000000001120  0000000000001120  00001120  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .fini         0000000d  00000000000013a8  00000000000013a8  000013a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .rodata       0000002e  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .eh_frame_hdr 00000044  0000000000002030  0000000000002030  00002030  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .eh_frame     00000108  0000000000002078  0000000000002078  00002078  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .init_array   00000008  0000000000003d78  0000000000003d78  00002d78  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .fini_array   00000008  0000000000003d80  0000000000003d80  00002d80  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      00000200  0000000000003d88  0000000000003d88  00002d88  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000078  0000000000003f88  0000000000003f88  00002f88  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000020  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000018  0000000000004020  0000000000004020  00003020  2**5
                  ALLOC
 26 .comment      00000024  0000000000000000  0000000000000000  00003020  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000318 l    d  .interp	0000000000000000              .interp
0000000000000338 l    d  .note.gnu.property	0000000000000000              .note.gnu.property
0000000000000358 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
000000000000037c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000003a0 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000408 l    d  .dynsym	0000000000000000              .dynsym
0000000000000690 l    d  .dynstr	0000000000000000              .dynstr
00000000000007a4 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000007e0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000820 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000008f8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
00000000000010a0 l    d  .plt.got	0000000000000000              .plt.got
00000000000010b0 l    d  .plt.sec	0000000000000000              .plt.sec
0000000000001120 l    d  .text	0000000000000000              .text
00000000000013a8 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
0000000000002030 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002078 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003d78 l    d  .init_array	0000000000000000              .init_array
0000000000003d80 l    d  .fini_array	0000000000000000              .fini_array
0000000000003d88 l    d  .dynamic	0000000000000000              .dynamic
0000000000003f88 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
0000000000004020 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001150 l     F .text	0000000000000000              deregister_tm_clones
0000000000001180 l     F .text	0000000000000000              register_tm_clones
00000000000011c0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004028 l     O .bss	0000000000000001              completed.8059
0000000000003d80 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001200 l     F .text	0000000000000000              frame_dummy
0000000000003d78 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              mainx.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000000217c l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
00000000000013a8 l     F .fini	0000000000000000              _fini
0000000000003d80 l       .init_array	0000000000000000              __init_array_end
0000000000004008 l     O .data	0000000000000000              __dso_handle
0000000000003d88 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003d78 l       .init_array	0000000000000000              __init_array_start
0000000000002030 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000004020 l     O .data	0000000000000000              __TMC_END__
0000000000003f88 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
00000000000013a0 g     F .text	0000000000000005              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004000  w      .data	0000000000000000              data_start
0000000000004020 g       .data	0000000000000000              _edata
0000000000004030 g     O .bss	0000000000000008              z
0000000000004010 g     O .data	0000000000000008              x
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              fprintf@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000       F *UND*	0000000000000000              dlopen@@GLIBC_2.2.5
0000000000001330 g     F .text	0000000000000065              __libc_csu_init
0000000000004038 g       .bss	0000000000000000              _end
0000000000001120 g     F .text	000000000000002f              _start
0000000000000000       F *UND*	0000000000000000              dlclose@@GLIBC_2.2.5
0000000000004018 g     O .data	0000000000000008              y
0000000000004020 g       .bss	0000000000000000              __bss_start
0000000000001209 g     F .text	0000000000000121              main
0000000000000000       F *UND*	0000000000000000              exit@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000       F *UND*	0000000000000000              dlsym@@GLIBC_2.2.5
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              dlerror@@GLIBC_2.2.5
0000000000004020 g     O .bss	0000000000000008              stderr@@GLIBC_2.2.5



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fa0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <fprintf@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fa8 <fprintf@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <dlopen@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fb0 <dlopen@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <dlclose@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 3fb8 <dlclose@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <exit@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 3fc0 <exit@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <dlsym@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 3fc8 <dlsym@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <dlerror@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3fd0 <dlerror@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 66 02 00 00 	lea    0x266(%rip),%r8        # 13a0 <__libc_csu_fini>
    113a:	48 8d 0d ef 01 00 00 	lea    0x1ef(%rip),%rcx        # 1330 <__libc_csu_init>
    1141:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1209 <main>
    1148:	ff 15 92 2e 00 00    	callq  *0x2e92(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4020 <stderr@@GLIBC_2.2.5>
    1157:	48 8d 05 c2 2e 00 00 	lea    0x2ec2(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 6e 2e 00 00 	mov    0x2e6e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 99 2e 00 00 	lea    0x2e99(%rip),%rdi        # 4020 <stderr@@GLIBC_2.2.5>
    1187:	48 8d 35 92 2e 00 00 	lea    0x2e92(%rip),%rsi        # 4020 <stderr@@GLIBC_2.2.5>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 5d 2e 00 00 00 	cmpb   $0x0,0x2e5d(%rip)        # 4028 <completed.8059>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 35 2e 00 00 01 	movb   $0x1,0x2e35(%rip)        # 4028 <completed.8059>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <main>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 83 ec 20          	sub    $0x20,%rsp
    1215:	be 01 00 00 00       	mov    $0x1,%esi
    121a:	48 8d 3d e3 0d 00 00 	lea    0xde3(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1221:	e8 aa fe ff ff       	callq  10d0 <dlopen@plt>
    1226:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    122a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    122f:	75 2d                	jne    125e <main+0x55>
    1231:	e8 da fe ff ff       	callq  1110 <dlerror@plt>
    1236:	48 89 c2             	mov    %rax,%rdx
    1239:	48 8b 05 e0 2d 00 00 	mov    0x2de0(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    1240:	48 8d 35 cc 0d 00 00 	lea    0xdcc(%rip),%rsi        # 2013 <_IO_stdin_used+0x13>
    1247:	48 89 c7             	mov    %rax,%rdi
    124a:	b8 00 00 00 00       	mov    $0x0,%eax
    124f:	e8 6c fe ff ff       	callq  10c0 <fprintf@plt>
    1254:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1259:	e8 92 fe ff ff       	callq  10f0 <exit@plt>
    125e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1262:	48 8d 35 ae 0d 00 00 	lea    0xdae(%rip),%rsi        # 2017 <_IO_stdin_used+0x17>
    1269:	48 89 c7             	mov    %rax,%rdi
    126c:	e8 8f fe ff ff       	callq  1100 <dlsym@plt>
    1271:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1275:	e8 96 fe ff ff       	callq  1110 <dlerror@plt>
    127a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    127e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1283:	74 29                	je     12ae <main+0xa5>
    1285:	48 8b 05 94 2d 00 00 	mov    0x2d94(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    128c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1290:	48 8d 35 7c 0d 00 00 	lea    0xd7c(%rip),%rsi        # 2013 <_IO_stdin_used+0x13>
    1297:	48 89 c7             	mov    %rax,%rdi
    129a:	b8 00 00 00 00       	mov    $0x0,%eax
    129f:	e8 1c fe ff ff       	callq  10c0 <fprintf@plt>
    12a4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    12a9:	e8 42 fe ff ff       	callq  10f0 <exit@plt>
    12ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12b2:	b9 02 00 00 00       	mov    $0x2,%ecx
    12b7:	48 8d 15 72 2d 00 00 	lea    0x2d72(%rip),%rdx        # 4030 <z>
    12be:	48 8d 35 53 2d 00 00 	lea    0x2d53(%rip),%rsi        # 4018 <y>
    12c5:	48 8d 3d 44 2d 00 00 	lea    0x2d44(%rip),%rdi        # 4010 <x>
    12cc:	ff d0                	callq  *%rax
    12ce:	8b 15 60 2d 00 00    	mov    0x2d60(%rip),%edx        # 4034 <z+0x4>
    12d4:	8b 05 56 2d 00 00    	mov    0x2d56(%rip),%eax        # 4030 <z>
    12da:	89 c6                	mov    %eax,%esi
    12dc:	48 8d 3d 3b 0d 00 00 	lea    0xd3b(%rip),%rdi        # 201e <_IO_stdin_used+0x1e>
    12e3:	b8 00 00 00 00       	mov    $0x0,%eax
    12e8:	e8 c3 fd ff ff       	callq  10b0 <printf@plt>
    12ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12f1:	48 89 c7             	mov    %rax,%rdi
    12f4:	e8 e7 fd ff ff       	callq  10e0 <dlclose@plt>
    12f9:	85 c0                	test   %eax,%eax
    12fb:	79 b1                	jns    12ae <main+0xa5>
    12fd:	e8 0e fe ff ff       	callq  1110 <dlerror@plt>
    1302:	48 89 c2             	mov    %rax,%rdx
    1305:	48 8b 05 14 2d 00 00 	mov    0x2d14(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    130c:	48 8d 35 00 0d 00 00 	lea    0xd00(%rip),%rsi        # 2013 <_IO_stdin_used+0x13>
    1313:	48 89 c7             	mov    %rax,%rdi
    1316:	b8 00 00 00 00       	mov    $0x0,%eax
    131b:	e8 a0 fd ff ff       	callq  10c0 <fprintf@plt>
    1320:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1325:	e8 c6 fd ff ff       	callq  10f0 <exit@plt>
    132a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001330 <__libc_csu_init>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	41 57                	push   %r15
    1336:	4c 8d 3d 3b 2a 00 00 	lea    0x2a3b(%rip),%r15        # 3d78 <__frame_dummy_init_array_entry>
    133d:	41 56                	push   %r14
    133f:	49 89 d6             	mov    %rdx,%r14
    1342:	41 55                	push   %r13
    1344:	49 89 f5             	mov    %rsi,%r13
    1347:	41 54                	push   %r12
    1349:	41 89 fc             	mov    %edi,%r12d
    134c:	55                   	push   %rbp
    134d:	48 8d 2d 2c 2a 00 00 	lea    0x2a2c(%rip),%rbp        # 3d80 <__do_global_dtors_aux_fini_array_entry>
    1354:	53                   	push   %rbx
    1355:	4c 29 fd             	sub    %r15,%rbp
    1358:	48 83 ec 08          	sub    $0x8,%rsp
    135c:	e8 9f fc ff ff       	callq  1000 <_init>
    1361:	48 c1 fd 03          	sar    $0x3,%rbp
    1365:	74 1f                	je     1386 <__libc_csu_init+0x56>
    1367:	31 db                	xor    %ebx,%ebx
    1369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1370:	4c 89 f2             	mov    %r14,%rdx
    1373:	4c 89 ee             	mov    %r13,%rsi
    1376:	44 89 e7             	mov    %r12d,%edi
    1379:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    137d:	48 83 c3 01          	add    $0x1,%rbx
    1381:	48 39 dd             	cmp    %rbx,%rbp
    1384:	75 ea                	jne    1370 <__libc_csu_init+0x40>
    1386:	48 83 c4 08          	add    $0x8,%rsp
    138a:	5b                   	pop    %rbx
    138b:	5d                   	pop    %rbp
    138c:	41 5c                	pop    %r12
    138e:	41 5d                	pop    %r13
    1390:	41 5e                	pop    %r14
    1392:	41 5f                	pop    %r15
    1394:	c3                   	retq   
    1395:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    139c:	00 00 00 00 

00000000000013a0 <__libc_csu_fini>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	c3                   	retq   

Disassembly of section .fini:

00000000000013a8 <_fini>:
    13a8:	f3 0f 1e fa          	endbr64 
    13ac:	48 83 ec 08          	sub    $0x8,%rsp
    13b0:	48 83 c4 08          	add    $0x8,%rsp
    13b4:	c3                   	retq   
