# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program

# Sample linked list
  .align 8

ele1:
  .quad 0x00a
  .quad ele2
ele2:
  .quad 0x0b0
  .quad ele3
ele3:
  .quad 0xc00
  .quad 0

main:
  irmovq ele1, %rdi
  xorq %r8, %r8     # val = 0;
	call rsum_list		# rsum_list(ele1)
	ret

rsum_list:
  andq %rdi, %rdi   # Set CC
  jne loop
  rrmovq %r8, %rax
  ret

loop:
  mrmovq (%rdi), %rax
  addq %rax, %r8        # val += ls->val
  mrmovq 8(%rdi), %rdi   # ls = ls->next
  call rsum_list
  ret

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
