# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program

# Sample linked list
  .align 8

# Source block
  src:
  .quad 0x00a
  .quad 0x0b0
  .quad 0xc00

# Destination block
  dest:
  .quad 0x111
  .quad 0x222
  .quad 0x333

main:
  irmovq src, %rdi
  irmovq dest, %rsi
  irmovq $3, %rdx
	call copy_block		# copy_block(src, dest)
	ret

copy_block:
  xorq %rax, %rax   # val = 0;
  andq %rdx, %rdx   # Set CC
  irmovq $8, %r8
  irmovq $1, %r9
  jmp test

loop:
  mrmovq (%rdi), %r10
  rmmovq %r10, (%rsi)
  addq %r8, %rdi
  addq %r8, %rsi
  xorq %r10, %rax        # result ^= val
	subq %r9, %rdx         # Set CC

test:
  jg loop           # while(len > 0)
  ret               # return val

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
